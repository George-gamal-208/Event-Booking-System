@inject UserManager<EventBooking.Models.ApplicationUser> UserManager
@model EventBooking.Models.ViewModels.PagedResult<EventBooking.Models.Event>
@* @model List<Event> *@

<div class="text-center mb-8">
    <h1 class="text-4xl font-bold text-gray-800">Upcoming Events</h1>
</div>

<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
    @foreach (var @eventItem in Model.Items)
    {
        <div class="bg-white rounded-lg shadow-lg overflow-hidden" onclick="window.location.href='@Url.Action("EventDetails", "Event", new { id = eventItem.EventId })'">
            <img src="~/Uploads/Events/@eventItem.ImageUrl" alt="@eventItem.Name" class="w-full h-48 object-cover">
            <div class="p-6">
                <h2 class="text-xl font-semibold text-gray-800">@eventItem.Name</h2>
                <p class="text-gray-500 mt-2"><strong>Price:</strong> $@eventItem.Price</p>
                 @{
                    if (User.Identity.IsAuthenticated)
                    {
                        var currentUser = await UserManager.GetUserAsync(User);
                        var isBooked = Context.RequestServices.GetService<EventBooking.Bl.EventDbContext>()
                        .Bookings.Any(b => b.EventId == eventItem.EventId && b.UserId == currentUser.Id);
                        @if (isBooked)
                        {
                            <span class="inline-block bg-green-500 text-white px-4 py-2 mt-4 rounded-full">Booked</span>
                        }
                        else
                        {
                            <a href="/Event/EventDetails/@eventItem.EventId" class="inline-block bg-blue-600 text-white px-4 py-2 mt-4 rounded-full hover:bg-blue-700">Book Now</a>
                        }
  
                    }
                    else
                    {
                        <a href="/Event/EventDetails/@eventItem.EventId" class="inline-block bg-blue-600 text-white px-4 py-2 mt-4 rounded-full hover:bg-blue-700">Book Now</a>
                    }
                }
             
            </div>
        </div>    
    }

    <!-- Pagination Controls -->
    <div class="pagination-container">
        <!-- Previous Button -->
        <a class="pagination-link @(Model.CurrentPage == 1 ? "disabled" : "")"
           asp-action="Index"
           asp-route-page="@(Model.CurrentPage - 1)"
           asp-route-pageSize="@Model.PageSize">Previous</a>

        <!-- Page Numbers -->
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a class="pagination-link @(i == Model.CurrentPage ? "active" : "")"
               asp-action="Index"
               asp-route-page="@i"
               asp-route-pageSize="@Model.PageSize">@i</a>
        }

        <!-- Next Button -->
        <a class="pagination-link @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")"
           asp-action="Index"
           asp-route-page="@(Model.CurrentPage + 1)"
           asp-route-pageSize="@Model.PageSize">Next</a>
    </div>


    

    
  
</div>